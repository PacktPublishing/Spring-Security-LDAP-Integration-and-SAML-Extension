<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<context:annotation-config />
	
	<context:component-scan base-package="org.springframework.security.saml"/>

	<bean id="successLogoutHandler"
		class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler">
		<property name="defaultTargetUrl" value="/logout.jsp" />
	</bean>
	
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="samlAuthenticationProvider" />
	</security:authentication-manager>
	
	<bean id="samlFilter" class="org.springframework.security.web.FilterChainProxy">
		<security:filter-chain-map request-matcher="ant">
			<security:filter-chain pattern="/saml/login/**"	filters="samlEntryPoint" />
			<security:filter-chain pattern="/saml/logout/**" filters="samlLogoutFilter" />
			<security:filter-chain pattern="/saml/metadata/**" filters="metadataDisplayFilter" />
			<security:filter-chain pattern="/saml/SSO/**" filters="samlWebSSOProcessingFilter" />
			<security:filter-chain pattern="/saml/SSOHoK/**" filters="samlWebSSOHoKProcessingFilter" />
			<security:filter-chain pattern="/saml/SingleLogout/**" filters="samlLogoutProcessingFilter" />
			<security:filter-chain pattern="/saml/discovery/**" filters="samlIDPDiscovery" />
		</security:filter-chain-map>
	</bean>

	<bean id="samlLogger" class="org.springframework.security.saml.log.SAMLDefaultLogger" />

	<bean id="keyManager" class="org.springframework.security.saml.key.JKSKeyManager">
		<constructor-arg value="classpath:security/myKeystore.jks" />
		<constructor-arg type="java.lang.String" value="password" />
		<constructor-arg>
			<map>
				<entry key="mycustomkeys" value="password" />
			</map>
		</constructor-arg>
		<constructor-arg type="java.lang.String" value="mycustomkeys" />
	</bean>

	<bean id="samlIDPDiscovery" class="org.springframework.security.saml.SAMLDiscovery">
		<property name="idpSelectionPath" value="/WEB-INF/login.jsp" />
	</bean>

	<!-- Automatic SP MetaData generator -->
	<bean id="metadataGeneratorFilter" class="org.springframework.security.saml.metadata.MetadataGeneratorFilter">
		<constructor-arg>
			<bean class="org.springframework.security.saml.metadata.MetadataGenerator">
				<property name="extendedMetadata">
					<bean class="org.springframework.security.saml.metadata.ExtendedMetadata">
						<property name="idpDiscoveryEnabled" value="false" />
						<!-- <property name="idpDiscoveryEnabled" value="true" /> -->
						<!-- <property name="idpDiscoveryURL" value=""/> Remote discovery -->
                        <!-- <property name="idpDiscoveryResponseURL" value=""/>  Remote Discovery -->
					</bean>
				</property>
			</bean>
		</constructor-arg>
	</bean>
	
	<!-- PreConfigured SP MetaData -->
	<!-- 
	<bean class="org.springframework.security.saml.metadata.ExtendedMetadataDelegate">
	<constructor-arg>
		<bean class="org.opensaml.saml2.metadata.provider.ResourceBackedMetadataProvider"> 
			<constructor-arg>
				<bean class="java.util.Timer"/>
			</constructor-arg>
			<constructor-arg>
				<bean class="org.opensaml.util.resource.ClasspathResource">
					<constructor-arg value="/metadata/sp_metadata.xml"/>
				</bean>
			</constructor-arg>
			<property name="parserPool" ref="parserPool"/>
		</bean>
	</constructor-arg>
	<constructor-arg>
		<bean class="org.springframework.security.saml.metadata.ExtendedMetadata">
		</bean>
	</constructor-arg>
	</bean>
	 -->

	<bean id="metadataDisplayFilter" class="org.springframework.security.saml.metadata.MetadataDisplayFilter" />

	<bean id="metadata" class="org.springframework.security.saml.metadata.CachingMetadataManager">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.saml.metadata.ExtendedMetadataDelegate">
					<constructor-arg>
						<bean
							class="org.opensaml.saml2.metadata.provider.ResourceBackedMetadataProvider">
							<constructor-arg>
								<bean class="java.util.Timer" />
							</constructor-arg>
							<constructor-arg>
								<bean class="org.opensaml.util.resource.ClasspathResource">
									<constructor-arg value="/metadata/wso2.xml" />
								</bean>
							</constructor-arg>
							<property name="parserPool" ref="parserPool" />
						</bean>
					</constructor-arg>
					<constructor-arg>
						<bean
							class="org.springframework.security.saml.metadata.ExtendedMetadata">
						</bean>
					</constructor-arg>
				</bean>
			</list>
		</constructor-arg>
		<!-- Default IDP -->
		<property name="defaultIDP" value="localhost_WSO2"/>
	</bean>

	<bean id="contextProvider" class="org.springframework.security.saml.context.SAMLContextProviderImpl" />

	<bean id="samlWebSSOProcessingFilter" class="org.springframework.security.saml.SAMLProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationSuccessHandler" ref="successRedirectHandler" />
		<property name="authenticationFailureHandler" ref="failureRedirectHandler" />
	</bean>

	<bean id="samlWebSSOHoKProcessingFilter"
		class="org.springframework.security.saml.SAMLWebSSOHoKProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationSuccessHandler" ref="successRedirectHandler" />
		<property name="authenticationFailureHandler" ref="failureRedirectHandler" />
	</bean>

	<!-- Logout handler terminating local session -->
	<bean id="logoutHandler"
		class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler">
		<property name="invalidateHttpSession" value="false" />
	</bean>

	<!-- Override default logout processing filter with the one processing SAML 
		messages -->
	<bean id="samlLogoutFilter" class="org.springframework.security.saml.SAMLLogoutFilter">
		<constructor-arg index="0" ref="successLogoutHandler" />
		<constructor-arg index="1" ref="logoutHandler" />
		<constructor-arg index="2" ref="logoutHandler" />
	</bean>

	<!-- Filter processing incoming logout messages -->
	<!-- First argument determines URL user will be redirected to after successful 
		global logout -->
	<bean id="samlLogoutProcessingFilter"
		class="org.springframework.security.saml.SAMLLogoutProcessingFilter">
		<constructor-arg index="0" ref="successLogoutHandler" />
		<constructor-arg index="1" ref="logoutHandler" />
	</bean>

	<!-- Class loading incoming SAML messages from httpRequest stream -->
	<bean id="processor" class="org.springframework.security.saml.processor.SAMLProcessorImpl">
		<constructor-arg>
			<list>
				<ref bean="redirectBinding" />
				<ref bean="postBinding" />
				<ref bean="artifactBinding" />
				<ref bean="soapBinding" />
				<ref bean="paosBinding" />
			</list>
		</constructor-arg>
	</bean>

	<!-- SAML 2.0 WebSSO Assertion Consumer -->
	<bean id="webSSOprofileConsumer" class="org.springframework.security.saml.websso.WebSSOProfileConsumerImpl" />

	<!-- SAML 2.0 Holder-of-Key WebSSO Assertion Consumer -->
	<bean id="hokWebSSOprofileConsumer" class="org.springframework.security.saml.websso.WebSSOProfileConsumerHoKImpl" />

	<!-- SAML 2.0 Web SSO profile -->
	<bean id="webSSOprofile" class="org.springframework.security.saml.websso.WebSSOProfileImpl" />

	<!-- SAML 2.0 Holder-of-Key Web SSO profile -->
	<bean id="hokWebSSOProfile" class="org.springframework.security.saml.websso.WebSSOProfileConsumerHoKImpl" />

	<!-- SAML 2.0 ECP profile -->
	<bean id="ecpprofile" class="org.springframework.security.saml.websso.WebSSOProfileECPImpl" />

	<!-- SAML 2.0 Logout Profile -->
	<bean id="logoutprofile" class="org.springframework.security.saml.websso.SingleLogoutProfileImpl" />

	<!-- Bindings, encoders and decoders used for creating and parsing messages -->
	<bean id="postBinding" class="org.springframework.security.saml.processor.HTTPPostBinding">
		<constructor-arg ref="parserPool" />
		<constructor-arg ref="velocityEngine" />
	</bean>

	<bean id="redirectBinding" class="org.springframework.security.saml.processor.HTTPRedirectDeflateBinding">
		<constructor-arg ref="parserPool" />
	</bean>

	<bean id="artifactBinding" class="org.springframework.security.saml.processor.HTTPArtifactBinding">
		<constructor-arg ref="parserPool" />
		<constructor-arg ref="velocityEngine" />
		<constructor-arg>
			<bean
				class="org.springframework.security.saml.websso.ArtifactResolutionProfileImpl">
				<constructor-arg>
					<bean class="org.apache.commons.httpclient.HttpClient">
						<constructor-arg>
							<bean
								class="org.apache.commons.httpclient.MultiThreadedHttpConnectionManager" />
						</constructor-arg>
					</bean>
				</constructor-arg>
				<property name="processor">
					<bean
						class="org.springframework.security.saml.processor.SAMLProcessorImpl">
						<constructor-arg ref="soapBinding" />
					</bean>
				</property>
			</bean>
		</constructor-arg>
	</bean>

	<bean id="soapBinding" class="org.springframework.security.saml.processor.HTTPSOAP11Binding">
		<constructor-arg ref="parserPool" />
	</bean>

	<bean id="paosBinding" class="org.springframework.security.saml.processor.HTTPPAOS11Binding">
		<constructor-arg ref="parserPool" />
	</bean>

	<!-- Initialization of OpenSAML library -->
	<bean class="org.springframework.security.saml.SAMLBootstrap" />

	<!-- Initialization of the velocity engine -->
	<bean id="velocityEngine" class="org.springframework.security.saml.util.VelocityFactory"
		factory-method="getEngine" />

	<!-- XML parser pool needed for OpenSAML parsing -->
	<bean id="parserPool" class="org.opensaml.xml.parse.StaticBasicParserPool"
		init-method="initialize">
		<property name="builderFeatures">
			<map>
				<entry key="http://apache.org/xml/features/dom/defer-node-expansion" value="false" />
			</map>
		</property>
	</bean>

	<bean id="parserPoolHolder" class="org.springframework.security.saml.parser.ParserPoolHolder" />

</beans>
